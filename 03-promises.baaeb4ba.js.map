{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACdC,KAAKC,SAAW,GAEpCH,EAAQ,CAAEI,SAAAP,EAAUQ,MAAAP,IAEpBG,EAAO,CAAEG,SAAAP,EAAUQ,MAAAP,G,IAIpBQ,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBX,EAAAc,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAE9DM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBX,EAAAc,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IA6BhE,SAASQ,EAAcC,GACrB,OAAOC,OAAOD,E,CA9CHE,SAASC,cAAc,SAoB/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBACF,IAAMC,EAAeF,EAAEG,cAAcC,SAE/BlB,EAAQQ,EAAcQ,EAAahB,MAAMS,OACzCU,EAAOX,EAAcQ,EAAaG,KAAKV,OACvCW,EAASZ,EAAcQ,EAAaI,OAAOX,OAE7CY,EAAgB,EAChBC,EAAetB,EACnBuB,YAAW,WACThC,EAAc8B,EAAeC,GAC7B,IAAME,EAAWC,aAAY,WAE3BH,GAAgBH,GADhBE,GAAiB,KAEKD,GACpBM,cAAcF,GAEhBjC,EAAc8B,EAAeC,E,GAC5BH,E,GACFnB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const formElements = e.currentTarget.elements;\n\n  const delay = numberedValue(formElements.delay.value);\n  const step = numberedValue(formElements.step.value);\n  const amount = numberedValue(formElements.amount.value);\n\n  let currentAmount = 0;\n  let currentDelay = delay;\n  setTimeout(() => {\n    createPromise(currentAmount, currentDelay);\n    const interval = setInterval(() => {\n      currentAmount += 1;\n      currentDelay += step;\n      if (currentAmount === amount) {\n        clearInterval(interval);\n      }\n      createPromise(currentAmount, currentDelay);\n    }, step);\n  }, delay);\n}\n\nfunction numberedValue(value) {\n  return Number(value);\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","Math","random","position","delay","then","param","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$numberedValue","value","Number","document","querySelector","addEventListener","e","preventDefault","formElements","currentTarget","elements","step","amount","currentAmount","currentDelay","setTimeout","interval","setInterval","clearInterval"],"version":3,"file":"03-promises.baaeb4ba.js.map"}